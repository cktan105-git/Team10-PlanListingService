// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PlantListing.Infrastructure;

namespace PlantListing.Infrastructure.Migrations
{
    [DbContext(typeof(PlantListingContext))]
    [Migration("20210403144836_AddedSeedData")]
    partial class AddedSeedData
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.4")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.HasSequence("plant_category_hilo")
                .IncrementsBy(10);

            modelBuilder.HasSequence("plant_details_hilo")
                .IncrementsBy(10);

            modelBuilder.HasSequence("plant_unit_hilo")
                .IncrementsBy(10);

            modelBuilder.Entity("PlantListing.Model.PlantCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:HiLoSequenceName", "plant_category_hilo")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.SequenceHiLo);

                    b.Property<string>("Category")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("PlantCategory");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Category = "Vegetable"
                        },
                        new
                        {
                            Id = 2,
                            Category = "Fruit"
                        },
                        new
                        {
                            Id = 3,
                            Category = "Flower"
                        },
                        new
                        {
                            Id = 4,
                            Category = "Herb"
                        },
                        new
                        {
                            Id = 5,
                            Category = "Spice"
                        });
                });

            modelBuilder.Entity("PlantListing.Model.PlantDetails", b =>
                {
                    b.Property<long>("PlantDetailsId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:HiLoSequenceName", "plant_details_hilo")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.SequenceHiLo);

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("ImageName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<decimal>("Price")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<long>("ProducerId")
                        .HasColumnType("bigint");

                    b.Property<int>("Stock")
                        .HasColumnType("int");

                    b.Property<int>("UnitId")
                        .HasColumnType("int");

                    b.HasKey("PlantDetailsId");

                    b.HasIndex("CategoryId");

                    b.HasIndex("UnitId");

                    b.ToTable("PlantDetails");

                    b.HasData(
                        new
                        {
                            PlantDetailsId = 1L,
                            CategoryId = 1,
                            Description = "Green vegetable",
                            Name = "Broccoli",
                            Price = 2.00m,
                            ProducerId = 1L,
                            Stock = 50,
                            UnitId = 1
                        },
                        new
                        {
                            PlantDetailsId = 2L,
                            CategoryId = 2,
                            Description = "Red color sour fruit",
                            Name = "Tomato",
                            Price = 1.00m,
                            ProducerId = 1L,
                            Stock = 50,
                            UnitId = 1
                        },
                        new
                        {
                            PlantDetailsId = 3L,
                            CategoryId = 2,
                            Description = "Green color fruit",
                            Name = "Japanese Cucumber",
                            Price = 1.00m,
                            ProducerId = 2L,
                            Stock = 50,
                            UnitId = 2
                        },
                        new
                        {
                            PlantDetailsId = 4L,
                            CategoryId = 3,
                            Description = "Flower chasing the sun",
                            Name = "Sunflower",
                            Price = 50.00m,
                            ProducerId = 3L,
                            Stock = 10,
                            UnitId = 3
                        },
                        new
                        {
                            PlantDetailsId = 5L,
                            CategoryId = 5,
                            Description = "Home grown fresh garlic",
                            Name = "Garlic",
                            Price = 0.50m,
                            ProducerId = 4L,
                            Stock = 50,
                            UnitId = 2
                        },
                        new
                        {
                            PlantDetailsId = 6L,
                            CategoryId = 5,
                            Description = "Add flavor to your dish",
                            Name = "Spring Onion",
                            Price = 0.50m,
                            ProducerId = 4L,
                            Stock = 50,
                            UnitId = 2
                        },
                        new
                        {
                            PlantDetailsId = 7L,
                            CategoryId = 5,
                            Description = "Red Chilli",
                            Name = "Red Chilli",
                            Price = 1.00m,
                            ProducerId = 4L,
                            Stock = 100,
                            UnitId = 2
                        },
                        new
                        {
                            PlantDetailsId = 8L,
                            CategoryId = 5,
                            Description = "Green Chilli",
                            Name = "Green Chilli",
                            Price = 1.00m,
                            ProducerId = 4L,
                            Stock = 100,
                            UnitId = 2
                        });
                });

            modelBuilder.Entity("PlantListing.Model.PlantUnit", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:HiLoSequenceName", "plant_unit_hilo")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.SequenceHiLo);

                    b.Property<string>("Unit")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("PlantUnit");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Unit = "kg"
                        },
                        new
                        {
                            Id = 2,
                            Unit = "g"
                        },
                        new
                        {
                            Id = 3,
                            Unit = "bundle"
                        });
                });

            modelBuilder.Entity("PlantListing.Model.PlantDetails", b =>
                {
                    b.HasOne("PlantListing.Model.PlantCategory", "PlantCategory")
                        .WithMany()
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PlantListing.Model.PlantUnit", "PlantUnit")
                        .WithMany()
                        .HasForeignKey("UnitId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("PlantCategory");

                    b.Navigation("PlantUnit");
                });
#pragma warning restore 612, 618
        }
    }
}
